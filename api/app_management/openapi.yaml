openapi: 3.0.3

info:
  title: CasaOS App Management API
  version: v2
  description: |
    <picture>
        <source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/IceWhaleTech/logo/main/casaos/casaos_banner_dark_night_800px.png">
        <source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/IceWhaleTech/logo/main/casaos/casaos_banner_twilight_blue_800px.png">
        <img alt="CasaOS" src="https://raw.githubusercontent.com/IceWhaleTech/logo/main/casaos/casaos_banner_twilight_blue_800px.png">
    </picture>

    CasaOS App Management manages app lifecycle, including installing, uninstalling, starting, stopping, setting, etc.

    For issues and discussions, please visit the [GitHub repository](https://github.com/IceWhaleTech/CasaOS) or join [our Discord](https://discord.gg/knqAbbBbeX).

servers:
  - url: /v2/app_management

tags:
  - name: AppStore methods
    description: |-
      methods for accessing local app store

  - name: Compose methods
    description: |-
      methods for managing compose app lifecycle

  - name: Container methods
    description: |-
      methods for managing app lifecycle

  - name: AppStoreInfo
    description: |-
      <SchemaDefinition schemaRef="#/components/schemas/AppStoreInfo" />

  - name: ComposeAppStoreInfo
    description: |-
      <SchemaDefinition schemaRef="#/components/schemas/ComposeAppStoreInfo" />

  - name: ComposeAppStoreInfoDetails
    description: |-
      <SchemaDefinition schemaRef="#/components/schemas/ComposeAppStoreInfoDetails" />

  - name: ContainerStoreInfo
    description: |-
      <SchemaDefinition schemaRef="#/components/schemas/ContainerStoreInfo" />

  - name: EnvStoreInfo
    description: |-
      <SchemaDefinition schemaRef="#/components/schemas/EnvStoreInfo" />

  - name: PortStoreInfo
    description: |-
      <SchemaDefinition schemaRef="#/components/schemas/PortStoreInfo" />

  - name: VolumeStoreInfo
    description: |-
      <SchemaDefinition schemaRef="#/components/schemas/VolumeStoreInfo" />

x-tagGroups:
  - name: Methods
    tags:
      - AppStore methods
      - Compose methods
      - Container methods

  - name: Schemas
    tags:
      - AppStoreInfo
      - ComposeAppStoreInfo
      - ComposeAppStoreInfoDetails
      - ContainerStoreInfo
      - EnvStoreInfo
      - PortStoreInfo

security:
  - access_token: []

paths:
  /apps/{id}:
    get:
      summary: Get app info from AppStore
      description: |
        Accept both `application/json` and `application/yaml` content type for the `Accept` header in the HTTP request.

        - If the `Accept` header is set to `application/yaml`, the response will be the original [Docker Compose](https://docs.docker.com/compose/) content.
        - Otherwise the `Accept` header is assumed to be `application/json` and the response will be provided in the schema described below.

      operationId: getAppInfo
      tags:
        - AppStore methods

      parameters:
        - $ref: "#/components/parameters/AppStoreID"
      responses:
        "200":
          $ref: "#/components/responses/ComposeAppStoreInfoOK"
        "404":
          $ref: "#/components/responses/ResponseNotFound"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

  /container/{id}/healthcheck:
    get:
      summary: Check if an app is running healthy
      description: |
        By default this method simply check if the WebUI port of the app returns `200 OK` status code.

        Custom health check procedure will be implemented in the future.
      operationId: checkApp
      tags:
        - Container methods
      parameters:
        - $ref: "#/components/parameters/ContainerID"
      responses:
        "200":
          $ref: "#/components/responses/AppHealthCheckOK"
        "503":
          $ref: "#/components/responses/ResponseServiceUnavailable"

components:
  securitySchemes:
    access_token:
      type: apiKey
      in: header
      name: Authorization

  parameters:
    AppStoreID:
      name: id
      in: path
      required: true
      schema:
        type: string

    ContainerID:
      name: id
      in: path
      required: true
      schema:
        type: string

  responses:
    ResponseInternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponse"
          example:
            message: "Internal Server Error"

    ResponseNotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponse"
          example:
            message: "Not Found"

    ResponseBadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponse"
          example:
            message: "Bad Request"

    ResponseServiceUnavailable:
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponse"
          example:
            message: "Service Unavailable"

    ComposeAppStoreInfoOK:
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/BaseResponse"
              - properties:
                  data:
                    $ref: "#/components/schemas/ComposeAppStoreInfoDetails"

        application/yaml:
          schema:
            type: string

    AppHealthCheckOK:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponse"
          example:
            message: "pong"

  schemas:
    BaseResponse:
      properties:
        message:
          readOnly: true
          description: message returned by server side if there is any
          type: string
          example: ""

    ComposeAppStoreInfo:
      type: object
      required:
        - appstore_id
      properties:
        appstore_id:
          type: string
          example: "e4380876-d759-4b26-af1f-968a4606d399"
          x-go-name: AppStoreID
          x-oapi-codegen-extra-tags:
            mapstructure: "appstore_id"
        main_app:
          type: string
          example: "syncthing"
          x-oapi-codegen-extra-tags:
            mapstructure: "main_app"

    ComposeAppStoreInfoDetails:
      type: object
      allOf:
        - $ref: "#/components/schemas/ComposeAppStoreInfo"
        - type: object
          properties:
            apps:
              type: object
              additionalProperties:
                $ref: "#/components/schemas/AppStoreInfo"
              example:
                syncthing: { "(AppStoreInfo schema here)": ... }

    AppStoreInfo:
      type: object
      required:
        - title
      properties:
        title:
          type: object
          additionalProperties:
            type: string
          example:
            en_US: Syncthing
          x-oapi-codegen-extra-tags:
            mapstructure: "title"
        description:
          type: object
          additionalProperties:
            type: string
          example:
            en_US: Syncthing is a continuous file synchronization program. It synchronizes files between two or more computers in real time, safely protected from prying eyes. Your data is your data alone and you deserve to choose where it is stored, whether it is shared with some third party, and how it's transmitted over the internet.
          x-oapi-codegen-extra-tags:
            mapstructure: "description"
        tagline:
          type: object
          additionalProperties:
            type: string
          example:
            en_US: Free, secure, and distributed file synchronisation tool.
          x-oapi-codegen-extra-tags:
            mapstructure: "tagline"
        icon:
          type: string
          example: https://cdn.jsdelivr.net/gh/IceWhaleTech/CasaOS-AppStore@main/Apps/Syncthing/icon.png
          x-oapi-codegen-extra-tags:
            mapstructure: "icon"
        screenshot_link:
          type: array
          items:
            type: string
          example:
            - https://cdn.jsdelivr.net/gh/IceWhaleTech/CasaOS-AppStore@main/Apps/OpenSpeedTest/screenshot-1.png
            - https://cdn.jsdelivr.net/gh/IceWhaleTech/CasaOS-AppStore@main/Apps/OpenSpeedTest/screenshot-2.png
          x-oapi-codegen-extra-tags:
            mapstructure: "screenshot_link"
        thumbnail:
          type: string
          example: https://cdn.jsdelivr.net/gh/IceWhaleTech/CasaOS-AppStore@main/Apps/Jellyfin/thumbnail.jpg
          x-oapi-codegen-extra-tags:
            mapstructure: "thumbnail"
        author:
          type: string
          example: CasaOS Team
          x-oapi-codegen-extra-tags:
            mapstructure: "author"
        developer:
          type: string
          example: Syncthing
          x-oapi-codegen-extra-tags:
            mapstructure: "developer"
        category:
          type: string
          example: Backup
          x-oapi-codegen-extra-tags:
            mapstructure: "category"
        container:
          $ref: "#/components/schemas/ContainerStoreInfo"

    ContainerStoreInfo:
      properties:
        port_map:
          type: string
          example: "8384"
          x-oapi-codegen-extra-tags:
            mapstructure: "port_map"
        index:
          type: string
          example: "/"
          x-oapi-codegen-extra-tags:
            mapstructure: "index"
        envs:
          type: array
          items:
            $ref: "#/components/schemas/EnvStoreInfo"
        ports:
          type: array
          items:
            $ref: "#/components/schemas/PortStoreInfo"
        volumes:
          type: array
          items:
            $ref: "#/components/schemas/VolumeStoreInfo"

    EnvStoreInfo:
      properties:
        container:
          type: string
          example: TZ
          x-oapi-codegen-extra-tags:
            mapstructure: "container"
        description:
          type: object
          additionalProperties:
            type: string
          example:
            en_US: Time Zone
          x-oapi-codegen-extra-tags:
            mapstructure: "description"
        configurable:
          $ref: "#/components/schemas/Configurable"

    PortStoreInfo:
      properties:
        container:
          type: string
          example: 8384
          x-oapi-codegen-extra-tags:
            mapstructure: "container"
        protocol:
          type: string
          enum:
            - tcp
            - udp
          x-oapi-codegen-extra-tags:
            mapstructure: "protocol"
        description:
          type: object
          additionalProperties:
            type: string
          example:
            en_US: Web UI
          x-oapi-codegen-extra-tags:
            mapstructure: "description"
        configurable:
          $ref: "#/components/schemas/Configurable"

    VolumeStoreInfo:
      properties:
        container:
          type: string
          example: /config
          x-oapi-codegen-extra-tags:
            mapstructure: "container"
        description:
          type: object
          additionalProperties:
            type: string
          example:
            en_US: Syncthing config directory
          x-oapi-codegen-extra-tags:
            mapstructure: "description"
        configurable:
          $ref: "#/components/schemas/Configurable"

    Configurable:
      type: string
      enum:
        - yes
        - no
        - basic
        - advanced
      x-oapi-codegen-extra-tags:
        mapstructure: "configurable"
